/* General styling */
body {
    display: flex;
    margin: 0;
    font-family: Noto Sans, sans-serif;
    height: 100vh;
    overflow: hidden;
    /* Prevent body scroll */
}

/* Sidebar styling */
.sidebar {
    width: 220px;
    background-color: #f4f4f4;
    padding: 10px;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
}

.sidebar h2 {
    text-align: center;
    background-color: #ffe0b2;
    /* Soft orange background */
    padding: 15px 10px;
    /* Added more padding for better spacing */
    border-radius: 8px;
    /* Slightly larger border radius for smoother edges */
    margin-bottom: 20px;
    font-size: 1.5rem;
    /* Slightly larger text size for better readability */
    font-weight: bold;
    /* Make the text stand out */
    color: #5c4033;
    /* A darker color for text contrast */
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 1px 3px rgba(0, 0, 0, 0.06);
    /* Subtle shadow for depth */
    border: 1px solid #f9c896;
    /* Optional border for more definition */
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    /* Add smooth animation */
}

.object-list {
    flex-grow: 1;
    overflow-y: auto;
}

/* Container for each object */
.object {
    display: flex;
    align-items: center;
    padding: 12px 15px;
    /* Added more padding for better spacing */
    margin-bottom: 15px;
    background-color: #ffffff;
    border-radius: 8px;
    /* Rounded corners */
    cursor: grab;
    transition: background-color 0.3s ease, transform 0.2s ease;
    /* Smooth transition for hover and grab */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    /* Enhanced shadow for more depth */
}

/* When the object is being grabbed */
.object:active {
    cursor: grabbing;
    transform: scale(0.98);
    /* Slight shrink effect to show the grab action */
}

/* Hover effect to change background color */
.object:hover {
    background-color: #f5f5f5;
    /* Lighter grey for hover */
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    /* More pronounced shadow on hover */
    transform: translateY(-2px);
    /* Lift the object a little when hovering */
}

/* Symbol or icon inside the object */
.symbol {
    width: 45px;
    /* Slightly bigger icon size */
    height: 45px;
    /* Slightly bigger icon size */
    margin-right: 15px;
    /* Increased margin for better spacing */
    display: flex;
    justify-content: center;
    align-items: center;
    transition: background-color 0.2s ease, transform 0.2s ease;
}

/* Styling the text */
.object span {
    font-size: 18px;
    /* Larger text size */
    font-weight: 500;
    /* Slightly bolder font */
    color: #333;
    /* Darker text for better readability */
    flex-grow: 1;
    /* Ensure text takes available space */
    transition: color 0.2s ease;
    /* Smooth color transition */
}

/* Hover effect for the text */
.object:hover span {
    color: #5c4033;
    /* Change text color to blue on hover */
}




.main {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    /* Prevent main area scroll */
}

/* Toolbar styling */
.toolbar {
    background-color: #fed7aa;
    /* Original background color */
    padding: 10px 15px;
    display: flex;
    align-items: center;
    border-bottom: 1px solid #ddd;
    /* Light border color */
    color: #000;
    /* Set text and icons to black */
}

/* Toolbar Left and Right sections */
.toolbar-left,
.toolbar-right {
    display: flex;
    align-items: center;
}

/* Make the toolbar-left take up remaining space to push the toolbar-right to the right */
.toolbar-left {
    flex: 1;
}

/* Toolbar Buttons */
.toolbar button {
    background-color: transparent;
    border: none;
    padding: 8px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    color: inherit;
    /* Inherit text color from .toolbar */
}

.toolbar button .material-icons {
    font-size: 24px;
    color: inherit;
    /* Ensure icons are black */
}

.toolbar button:hover {
    background-color: rgba(0, 0, 0, 0.1);
    /* Slightly darken on hover */
    border-radius: 5px;
}

/* Left toolbar buttons spacing */
.toolbar-left button {
    margin-right: 5px;
}

.toolbar-left button:last-child {
    margin-right: 0;
}

.canvas {
    flex-grow: 1;
    position: relative;
    background-color: white;
    cursor: default;
    display: flex;
    justify-content: center;
    /* Center the canvas */
    align-items: center;
    /* Center the canvas */
    overflow: hidden;
    /* Prevent scrolling */
    height: 70vh;
    /* Full viewport height */
    width: 70vw;
    /* Full viewport width */
}

.canvas img {
    width: 100rem;
    height: auto;
    max-width: 100%;
    /* Ensure image doesn't overflow */
    max-height: 100%;
    /* Ensure image doesn't overflow */
}

/* Remove padding from symbol-container and text-container */
.symbol-container,
.text-container {
    position: absolute;
    transform-origin: center;
    z-index: 20;
    min-width: 20px;
    min-height: 20px;
    transform-origin: center center;
    box-sizing: border-box;
    display: block;
    width: auto;
    height: auto;
    pointer-events: auto;
    margin: 0;
    /* Ensure there's no margin */
}

/* Ensure the canvas fills the container */
.symbol-container .symbol {
    width: 100%;
    height: 100%;
    display: block;
    margin: 0;
    padding: 0;
}

/* Text container styles */
.text-container {
    display: flex;
    align-items: center;
    justify-content: center;
}

.text-container span {
    font-size: 16px;
    white-space: nowrap;
    pointer-events: none;
}

.resize-handle {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: #007bff;
    border: 1px solid #fff;
    border-radius: 50%;
    z-index: 30;
    /* Ensure resize handles are above other elements */
    display: none;
    pointer-events: all;
    /* Allow resize handles to capture mouse events */
    touch-action: none;
    /* Prevent default touch behavior on resize handles */
    transform-origin: center center;
}

/* Side handles */
.resize-handle.n {
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%);
    cursor: ns-resize;
}

.resize-handle.e {
    right: 0;
    top: 50%;
    transform: translate(50%, -50%);
    cursor: ew-resize;
}

.resize-handle.s {
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 50%);
    cursor: ns-resize;
}

.resize-handle.w {
    left: 0;
    top: 50%;
    transform: translate(-50%, -50%);
    cursor: ew-resize;
}

/* Corner handles */
.resize-handle.nw {
    top: 0;
    left: 0;
    transform: translate(-50%, -50%);
    cursor: nwse-resize;
}

.resize-handle.ne {
    top: 0;
    right: 0;
    transform: translate(50%, -50%);
    cursor: nesw-resize;
}

.resize-handle.sw {
    bottom: 0;
    left: 0;
    transform: translate(-50%, 50%);
    cursor: nesw-resize;
}

.resize-handle.se {
    bottom: 0;
    right: 0;
    transform: translate(50%, 50%);
    cursor: nwse-resize;
}

/* Highlight selected object */
.symbol-container.selected,
.text-container.selected {
    outline: 1px dashed black;
}

/* Show all handles when a symbol container is selected, not locked, and not being dragged */
.symbol-container.selected:not(.locked):not(.dragging) .resize-handle {
    display: block;
}

/* Hide all resize handles for text containers by default */
.text-container .resize-handle {
    display: none;
}

/* Show only the bottom-right corner handle for text containers when selected, not locked, and not being dragged */
.text-container.selected:not(.locked):not(.dragging) .resize-handle.se {
    display: block;
}

/* Hide other handles for text elements */
.text-container .resize-handle.n,
.text-container .resize-handle.e,
.text-container .resize-handle.s,
.text-container .resize-handle.w,
.text-container .resize-handle.nw,
.text-container .resize-handle.ne,
.text-container .resize-handle.sw {
    display: none;
}

/* Hide resize handles when dragging */
.symbol-container.dragging .resize-handle,
.text-container.dragging .resize-handle {
    display: none;
}

/* Remove the selection outline when dragging */
.symbol-container.dragging.selected,
.text-container.dragging.selected {
    outline: none;
}

/* Properties panel */
.properties-panel {
    width: 220px;
    background-color: #fff;
    border-left: 1px solid #ddd;
    padding: 15px;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
    box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);
}

.properties-panel h3 {
    margin-top: 0;
    text-align: center;
    font-size: 1.5em;
    margin-bottom: 20px;
}

.properties-panel fieldset {
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
    margin-bottom: 15px;
}

.properties-panel legend {
    font-weight: bold;
    padding: 0 5px;
}

.properties-panel label {
    display: block;
    margin-top: 10px;
    font-weight: 500;
}

.properties-panel input[type="number"],
.properties-panel input[type="color"],
.properties-panel input[type="range"],
.properties-panel input[type="text"],
.properties-panel select {
    width: 100%;
    padding: 5px;
    margin-top: 5px;
    box-sizing: border-box;
}

.properties-panel input[type="range"] {
    -webkit-appearance: none;
    height: 5px;
    background: #ddd;
    border-radius: 5px;
    outline: none;
}

.properties-panel input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;
    background: #007bff;
    cursor: pointer;
    border-radius: 50%;
}

.properties-panel input[type="range"]::-moz-range-thumb {
    width: 15px;
    height: 15px;
    background: #007bff;
    cursor: pointer;
    border-radius: 50%;
}

.properties-panel button {
    margin-top: 10px;
    padding: 8px;
    cursor: pointer;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
}

.properties-panel button .material-icons {
    vertical-align: middle;
    margin-right: 5px;
}

/* Text Style Buttons */
.text-style-buttons {
    display: flex;
    justify-content: space-between;
    margin-top: 10px;
}

.text-style-buttons button {
    flex: 1;
    margin-right: 5px;
    padding: 8px;
    font-size: 16px;
    cursor: pointer;
    background-color: #e0e0e0;
    border: 1px solid #ccc;
    border-radius: 5px;
    transition: background-color 0.2s, color 0.2s;
}

.text-style-buttons button:last-child {
    margin-right: 0;
}

.text-style-buttons button.active {
    background-color: #007bff;
    color: #fff;
    border-color: #007bff;
}

.text-style-buttons button:hover {
    background-color: #d0d0d0;
}

.text-style-buttons button .material-icons {
    vertical-align: middle;
    font-size: 18px;
    margin-right: 5px;
}

.properties-panel #width-value,
.properties-panel #height-value,
.properties-panel #rotation-value,
.properties-panel #text-size-value,
.properties-panel #text-rotation-value {
    display: inline-block;
    width: 30px;
    text-align: right;
    margin-left: 5px;
}

#no-selection {
    text-align: center;
    margin-top: 20px;
}

/* Lock buttons */
#lock-button,
#lock-button-text,
#lock-button-symbol {
    margin-top: 10px;
    padding: 8px;
    cursor: pointer;
    background-color: #ffe0b2;
    /* Tailwind bg-orange-200 */
    color: #5c4033;
    /* Darker text color for contrast */
    border: none;
    width: 100%;
    font-size: 16px;
    border-radius: 5px;
    /* Optional: Add rounded corners */
    transition: background-color 0.3s ease, transform 0.3s ease;
    /* Smooth hover transition */
}

#lock-button:hover,
#lock-button-text:hover,
#lock-button-symbol:hover {
    background-color: #ffcc80;
    /* Slightly darker shade for hover */
    transform: translateY(-2px);
    /* Slight lift on hover */
}

#lock-button .material-icons,
#lock-button-text .material-icons {
    vertical-align: middle;
    margin-right: 5px;
}

/* General slider styles for rotation, height, and width inputs */
/* General slider input styles */
#rotation-input,
#height-input,
#width-input,
#symbol-size-input,
#symbol-rotation-input,
#text-size-input,
#text-rotation-input {
    -webkit-appearance: none;
    /* Remove default styling in WebKit browsers */
    -moz-appearance: none;
    /* Remove default styling in Firefox */
    appearance: none;
    width: 100%;
    /* Full width of the container */
    height: 8px;
    /* Track height */
    background-color: #ffe0b2;
    /* Track color (match bg-orange-200) */
    border-radius: 5px;
    /* Rounded edges for the track */
    outline: none;
    /* Remove the outline */
    cursor: pointer;
    /* Make it interactive */
    transition: background-color 0.3s ease;
    /* Smooth transition for background */
}

/* Style the thumb (slider handle) for rotation, height, width, symbol size/rotation, and text size/rotation */
#rotation-input::-webkit-slider-thumb,
#height-input::-webkit-slider-thumb,
#width-input::-webkit-slider-thumb,
#symbol-size-input::-webkit-slider-thumb,
#symbol-rotation-input::-webkit-slider-thumb,
#text-size-input::-webkit-slider-thumb,
#text-rotation-input::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 20px;
    /* Width of the thumb */
    height: 20px;
    /* Height of the thumb */
    background-color: #5c4033;
    /* Thumb color */
    border-radius: 50%;
    /* Round thumb */
    cursor: pointer;
    /* Pointer cursor */
    transition: background-color 0.3s ease;
    /* Smooth transition for thumb */
}

#rotation-input::-moz-range-thumb,
#height-input::-moz-range-thumb,
#width-input::-moz-range-thumb,
#symbol-size-input::-moz-range-thumb,
#symbol-rotation-input::-moz-range-thumb,
#text-size-input::-moz-range-thumb,
#text-rotation-input::-moz-range-thumb {
    width: 20px;
    height: 20px;
    background-color: #5c4033;
    /* Thumb color */
    border-radius: 50%;
    /* Round thumb */
    cursor: pointer;
}

/* Focus effect for all sliders */
#rotation-input:focus,
#height-input:focus,
#width-input:focus,
#symbol-size-input:focus,
#symbol-rotation-input:focus,
#text-size-input:focus,
#text-rotation-input:focus {
    background-color: #ffcc80;
    /* Slightly darker color on focus */
}

/* Hover effect for thumb on all sliders */
#rotation-input:hover::-webkit-slider-thumb,
#height-input:hover::-webkit-slider-thumb,
#width-input:hover::-webkit-slider-thumb,
#symbol-size-input:hover::-webkit-slider-thumb,
#symbol-rotation-input:hover::-webkit-slider-thumb,
#text-size-input:hover::-webkit-slider-thumb,
#text-rotation-input:hover::-webkit-slider-thumb,
#rotation-input:hover::-moz-range-thumb,
#height-input:hover::-moz-range-thumb,
#width-input:hover::-moz-range-thumb,
#symbol-size-input:hover::-moz-range-thumb,
#symbol-rotation-input:hover::-moz-range-thumb,
#text-size-input:hover::-moz-range-thumb,
#text-rotation-input:hover::-moz-range-thumb {
    background-color: #ff8c00;
    /* Darker thumb color on hover */
}

/* Optional Custom Style */
.toggle-button {
    transition: background-color 0.3s ease;
}

.toggle-button.active {
    background-color: #fb923c; /* Darker orange (active state) */
    border-color: #fb923c; /* Border to match the active background */
}

.toggle-button.inactive {
    background-color: #fef3c7; /* Lighter orange (inactive state) */
    border-color: #fef3c7; /* Border to match the inactive background */
}




/* Add this to your existing styles.css */

/* Drag Handle Styling */
.drag-handle {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    cursor: move;
    z-index: 10;
    /* Ensure it's below the resize handles */
    background: transparent;
    /* Transparent to avoid visual interference */
}

/* Ensure only the bottom-right corner handle is visible for specific symbols */
.symbol-container[data-symbol-id="door"].selected:not(.locked):not(.dragging) .resize-handle,
.symbol-container[data-symbol-id="information-desk"].selected:not(.locked):not(.dragging) .resize-handle,
.symbol-container[data-symbol-id="statue"].selected:not(.locked):not(.dragging) .resize-handle,
.symbol-container[data-symbol-id="rest-area"].selected:not(.locked):not(.dragging) .resize-handle {
    display: none;
}

.symbol-container[data-symbol-id="door"].selected:not(.locked):not(.dragging) .resize-handle.se,
.symbol-container[data-symbol-id="information-desk"].selected:not(.locked):not(.dragging) .resize-handle.se,
.symbol-container[data-symbol-id="statue"].selected:not(.locked):not(.dragging) .resize-handle.se,
.symbol-container[data-symbol-id="rest-area"].selected:not(.locked):not(.dragging) .resize-handle.se {
    display: block;
}

/* Hide selection outlines and resize handles when capturing */
.canvas.capturing .symbol-container,
.canvas.capturing .text-container {
    outline: none;
}

.canvas.capturing .resize-handle {
    display: none !important;
}

.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.modal-content {
    background: #ffffff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    width: 90%;
    max-width: 400px;
    text-align: center;
}

.modal-buttons {
    margin-top: 20px;
}

.btn {
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    margin: 5px;
}

.btn-primary {
    background-color: #007bff;
    color: #fff;
}

.btn-primary:hover {
    background-color: #0056b3;
}

.btn-secondary {
    background-color: #6c757d;
    color: #fff;
}

.btn-secondary:hover {
    background-color: #495057;
}

.loading-spinner {
    border-style: solid;
}

.hidden {
    display: none;
}

.animate-spin {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}


/* Basic Styles for Page Load Loading Overlay */
#page-load-overlay {
    display: flex;
}

#page-load-overlay.hidden {
    display: none;
}

.w-16 {
    width: 4rem;
}

.h-16 {
    height: 4rem;
}

.border-4 {
    border-width: 4px;
}

.border-gray-300 {
    border-color: #d1d5db;
}

.border-t-orange-200 {
    border-top-color: #fbd38d;
}

.animate-spin {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

/* Text and Button Styles */
.text-gray-700 {
    color: #4a4a4a;
}

.text-lg {
    font-size: 1.125rem;
}

.font-semibold {
    font-weight: 600;
}

.mt-4 {
    margin-top: 1rem;
}


/* Responsive adjustments */
@media (max-width: 768px) {
    .sidebar {
        width: 180px;
    }

    .symbol {
        width: 30px;
        height: 30px;
    }

    .object span {
        font-size: 14px;
    }

    .properties-panel {
        width: 180px;
    }
}