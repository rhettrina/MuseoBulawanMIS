/* General styling */
body {
    display: flex;
    margin: 0;
    font-family: Noto Sans, sans-serif;
    height: 100vh;
    overflow: hidden; /* Prevent body scroll */
}

/* Sidebar styling */
.sidebar {
    width: 220px;
    background-color: #f4f4f4;
    padding: 10px;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
}

.sidebar h2 {
    text-align: center;
    background-color: #ffe0b2;
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 20px;
}
.object-list {
    flex-grow: 1;
    overflow-y: auto;
}

.object {
    display: flex;
    align-items: center;
    padding: 10px;
    margin-bottom: 15px;
    background-color: #fff;
    border-radius: 5px;
    cursor: grab;
    transition: background-color 0.2s;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Added shadow */
}

.object:active {
    cursor: grabbing;
}

.object:hover {
    background-color: #e0e0e0;
}

.symbol {
    width: 40px;
    height: 40px;
    margin-right: 10px;
}

.object span {
    font-size: 16px;
    flex-grow: 1;
}

.main {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden; /* Prevent main area scroll */
}

/* Toolbar styling */
.toolbar {
    background-color: #fed7aa; /* Original background color */
    padding: 10px 15px;
    display: flex;
    align-items: center;
    border-bottom: 1px solid #ddd; /* Light border color */
    color: #000; /* Set text and icons to black */
}

/* Toolbar Left and Right sections */
.toolbar-left,
.toolbar-right {
    display: flex;
    align-items: center;
}

/* Make the toolbar-left take up remaining space to push the toolbar-right to the right */
.toolbar-left {
    flex: 1;
}

/* Toolbar Buttons */
.toolbar button {
    background-color: transparent;
    border: none;
    padding: 8px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    color: inherit; /* Inherit text color from .toolbar */
}

.toolbar button .material-icons {
    font-size: 24px;
    color: inherit; /* Ensure icons are black */
}

.toolbar button:hover {
    background-color: rgba(0, 0, 0, 0.1); /* Slightly darken on hover */
    border-radius: 5px;
}

/* Left toolbar buttons spacing */
.toolbar-left button {
    margin-right: 5px;
}

.toolbar-left button:last-child {
    margin-right: 0;
}

.canvas {
    flex-grow: 1;
    position: relative;
    background-color: white;
    cursor: default;
    display: flex;
    justify-content: center; /* Center the canvas */
    align-items: center;     /* Center the canvas */
    overflow: hidden;        /* Prevent scrolling */
    height: 70vh;           /* Full viewport height */
    width: 70vw;            /* Full viewport width */
}

.canvas img {
    width: 100rem;
    height: auto;
    max-width: 100%;         /* Ensure image doesn't overflow */
    max-height: 100%;        /* Ensure image doesn't overflow */
}

/* Remove padding from symbol-container and text-container */
.symbol-container,
.text-container {
    position: absolute;
    transform-origin: center;
    z-index: 20;
    min-width: 20px;
    min-height: 20px;
    transform-origin: center center;
    box-sizing: border-box;
    display: block;
    width: auto;
    height: auto;
    pointer-events: auto;
    margin: 0; /* Ensure there's no margin */
}

/* Ensure the canvas fills the container */
.symbol-container .symbol {
    width: 100%;
    height: 100%;
    display: block;
    margin: 0;
    padding: 0;
}

/* Text container styles */
.text-container {
    display: flex;
    align-items: center;
    justify-content: center;
}

.text-container span {
    font-size: 16px;
    white-space: nowrap;
    pointer-events: none;
}

.resize-handle {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: #007bff;
    border: 1px solid #fff;
    border-radius: 50%;
    z-index: 30; /* Ensure resize handles are above other elements */
    display: none;
    pointer-events: all; /* Allow resize handles to capture mouse events */
    touch-action: none; /* Prevent default touch behavior on resize handles */
    transform-origin: center center;
}

/* Side handles */
.resize-handle.n {
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%);
    cursor: ns-resize;
}

.resize-handle.e {
    right: 0;
    top: 50%;
    transform: translate(50%, -50%);
    cursor: ew-resize;
}

.resize-handle.s {
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 50%);
    cursor: ns-resize;
}

.resize-handle.w {
    left: 0;
    top: 50%;
    transform: translate(-50%, -50%);
    cursor: ew-resize;
}

/* Corner handles */
.resize-handle.nw {
    top: 0;
    left: 0;
    transform: translate(-50%, -50%);
    cursor: nwse-resize;
}

.resize-handle.ne {
    top: 0;
    right: 0;
    transform: translate(50%, -50%);
    cursor: nesw-resize;
}

.resize-handle.sw {
    bottom: 0;
    left: 0;
    transform: translate(-50%, 50%);
    cursor: nesw-resize;
}

.resize-handle.se {
    bottom: 0;
    right: 0;
    transform: translate(50%, 50%);
    cursor: nwse-resize;
}

/* Highlight selected object */
.symbol-container.selected,
.text-container.selected {
    outline: 1px dashed black;
}

/* Show all handles when a symbol container is selected, not locked, and not being dragged */
.symbol-container.selected:not(.locked):not(.dragging) .resize-handle {
    display: block;
}

/* Hide all resize handles for text containers by default */
.text-container .resize-handle {
    display: none;
}

/* Show only the bottom-right corner handle for text containers when selected, not locked, and not being dragged */
.text-container.selected:not(.locked):not(.dragging) .resize-handle.se {
    display: block;
}

/* Hide other handles for text elements */
.text-container .resize-handle.n,
.text-container .resize-handle.e,
.text-container .resize-handle.s,
.text-container .resize-handle.w,
.text-container .resize-handle.nw,
.text-container .resize-handle.ne,
.text-container .resize-handle.sw {
    display: none;
}

/* Hide resize handles when dragging */
.symbol-container.dragging .resize-handle,
.text-container.dragging .resize-handle {
    display: none;
}

/* Remove the selection outline when dragging */
.symbol-container.dragging.selected,
.text-container.dragging.selected {
    outline: none;
}

/* Properties panel */
.properties-panel {
    width: 220px;
    background-color: #fff;
    border-left: 1px solid #ddd;
    padding: 15px;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
    box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);
}

.properties-panel h3 {
    margin-top: 0;
    text-align: center;
    font-size: 1.5em;
    margin-bottom: 20px;
}

.properties-panel fieldset {
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
    margin-bottom: 15px;
}

.properties-panel legend {
    font-weight: bold;
    padding: 0 5px;
}

.properties-panel label {
    display: block;
    margin-top: 10px;
    font-weight: 500;
}

.properties-panel input[type="number"],
.properties-panel input[type="color"],
.properties-panel input[type="range"],
.properties-panel input[type="text"],
.properties-panel select {
    width: 100%;
    padding: 5px;
    margin-top: 5px;
    box-sizing: border-box;
}

.properties-panel input[type="range"] {
    -webkit-appearance: none;
    height: 5px;
    background: #ddd;
    border-radius: 5px;
    outline: none;
}

.properties-panel input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;
    background: #007bff;
    cursor: pointer;
    border-radius: 50%;
}

.properties-panel input[type="range"]::-moz-range-thumb {
    width: 15px;
    height: 15px;
    background: #007bff;
    cursor: pointer;
    border-radius: 50%;
}

.properties-panel button {
    margin-top: 10px;
    padding: 8px;
    cursor: pointer;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
}

.properties-panel button .material-icons {
    vertical-align: middle;
    margin-right: 5px;
}

/* Text Style Buttons */
.text-style-buttons {
    display: flex;
    justify-content: space-between;
    margin-top: 10px;
}

.text-style-buttons button {
    flex: 1;
    margin-right: 5px;
    padding: 8px;
    font-size: 16px;
    cursor: pointer;
    background-color: #e0e0e0;
    border: 1px solid #ccc;
    border-radius: 5px;
    transition: background-color 0.2s, color 0.2s;
}

.text-style-buttons button:last-child {
    margin-right: 0;
}

.text-style-buttons button.active {
    background-color: #007bff;
    color: #fff;
    border-color: #007bff;
}

.text-style-buttons button:hover {
    background-color: #d0d0d0;
}

.text-style-buttons button .material-icons {
    vertical-align: middle;
    font-size: 18px;
    margin-right: 5px;
}

.properties-panel #width-value,
.properties-panel #height-value,
.properties-panel #rotation-value,
.properties-panel #text-size-value,
.properties-panel #text-rotation-value {
    display: inline-block;
    width: 30px;
    text-align: right;
    margin-left: 5px;
}

#no-selection {
    text-align: center;
    margin-top: 20px;
}

/* Lock buttons */
#lock-button,
#lock-button-text,
#lock-button-symbol {
    margin-top: 10px;
    padding: 8px;
    cursor: pointer;
    background-color: #007bff;
    color: #fff;
    border: none;
    width: 100%;
    font-size: 16px;
}

#lock-button .material-icons,
#lock-button-text .material-icons {
    vertical-align: middle;
    margin-right: 5px;
}

/* Add this to your existing styles.css */

/* Drag Handle Styling */
.drag-handle {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    cursor: move;
    z-index: 10; /* Ensure it's below the resize handles */
    background: transparent; /* Transparent to avoid visual interference */
}

/* Ensure only the bottom-right corner handle is visible for specific symbols */
.symbol-container[data-symbol-id="door"].selected:not(.locked):not(.dragging) .resize-handle,
.symbol-container[data-symbol-id="information-desk"].selected:not(.locked):not(.dragging) .resize-handle,
.symbol-container[data-symbol-id="statue"].selected:not(.locked):not(.dragging) .resize-handle,
.symbol-container[data-symbol-id="rest-area"].selected:not(.locked):not(.dragging) .resize-handle {
    display: none;
}

.symbol-container[data-symbol-id="door"].selected:not(.locked):not(.dragging) .resize-handle.se,
.symbol-container[data-symbol-id="information-desk"].selected:not(.locked):not(.dragging) .resize-handle.se,
.symbol-container[data-symbol-id="statue"].selected:not(.locked):not(.dragging) .resize-handle.se,
.symbol-container[data-symbol-id="rest-area"].selected:not(.locked):not(.dragging) .resize-handle.se {
    display: block;
}

/* Hide selection outlines and resize handles when capturing */
.canvas.capturing .symbol-container,
.canvas.capturing .text-container {
  outline: none;
}

.canvas.capturing .resize-handle {
  display: none !important;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .sidebar {
        width: 180px;
    }

    .symbol {
        width: 30px;
        height: 30px;
    }

    .object span {
        font-size: 14px;
    }

    .properties-panel {
        width: 180px;
    }
}